{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template local_levitate/analytics

    Template which defines a analytics graphs and tables.

    Classes required for JS:
    * none

    Data attributes required for JS:
    * none

    Example context (json):
    {
        'totalusers' => $totalusers,
        'totaltimespent' =>50,
        'totalcourses' => 10,
        'logourl' => https://levitate.human-logic.com/company-logo.png,
        'contact-person_svg' => $OUTPUT->image_url('contact-person', 'local_levitate'),
        'contact-details_svg' => $OUTPUT->image_url('contact-details', 'local_levitate'),
        'access-domain_svg' => $OUTPUT->image_url('access-domain', 'local_levitate'),
        'calendar_svg' => $OUTPUT->image_url('calendar', 'local_levitate'),
        'contactname' => Admin User,
        'profesion' => SE,
        'contactemail' => admin@dumy.com,
        'mobile' =>9963361111,
        'primarydomain' => https://levitate.human-logic.com,
        'datevalues' => Nov 23, 2023 - Nov 23, 2024,
        'utilizationpercentage' => 15,
        'graphvalue' => 25,
        'totalseats' => 100,
        'remainingseats' => 85
    }
}}
<div class="course_explore">
    <div class="hl-filters-wrapper">
        <div class="hl-base">
            <div id="id_clearfilter" class="clearfilter">
                {{clear_filters}}
            </div>
            <div class="course-search">
                <input type="text" class="searchTerm"
                    placeholder="{{findcourse}}" />
                <button type="submit" class="searchButton">
                    <i class="fa fa-search"></i>
                </button>
            </div>
            <div class="slider-wrapper">
                <p class="label">{{duration}}</p>
                <div slider id="slider-distance">
                    <div>
                        <div inverse-left style="width:0%;"></div>
                        <div inverse-right style="width:0%;"></div>
                        <div range style="left:0%;right:0%;"></div>
                        <span thumb minthumb style="left:0%;"></span>
                        <span thumb maxthumb style="left:100%;"></span>
                        <div sign style="left:30%;">
                            <span id="value">30</span>
                        </div>
                        <div sign style="left:60%;">
                            <span id="value">60</span>
                        </div>
                    </div>

                    <input id="minDval_input" data-filtername='time_params' name='filter_checkbox' type="range"
                        tabindex="0" value="{{minval}}" max="{{maxval}}"
                        min="{{minval}}" step="5" oninput="
                        this.value=Math.min(this.value,this.parentNode.childNodes[5].value-1);
                        var value=(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.value)
                                    -(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.min);
                        var children = this.parentNode.childNodes[1].childNodes;
                        console.log(this.parentNode.childNodes[1]);
                        children[1].style.width=value+'%';
                        children[5].style.left=value+'%';
                        children[7].style.left=value+'%';children[11].style.left=value+'%';
                        children[11].childNodes[1].innerHTML=this.value;
                        changeminDval(this.value)" 
                    />
                    <input id="maxDval_input" data-filtername='time_params' name='filter_checkbox' type="range"
                        tabindex="0" value="{{maxval}}" max="{{maxval}}"
                        min="{{minval}}" step="5" oninput="
                        this.value=Math.max(this.value,this.parentNode.childNodes[3].value-(-1));
                        var value=(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.value)
                                            -(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.min);
                        var children = this.parentNode.childNodes[1].childNodes;
                        children[3].style.width=(100-value)+'%';
                        children[5].style.right=(100-value)+'%';
                        children[9].style.left=value+'%';children[13].style.left=value+'%';
                        children[13].childNodes[1].innerHTML=this.value;
                        changemaxDval(this.value)" 
                    />
                    <div class="box-minmax">
                        <span>
                            <select name="minDval" id="minDval">
                                <!-- <option value="0">Min</option> -->
                            </select>
                        </span>
                        <span>{{to}}</span>
                        <span>
                            <select name="maxDval" id="maxDval"></select>
                        </span>
                    </div>
                    <div class="error">
                        <p class="errortext"></p>
                    </div>
                </div>
            </div>

            <div class="filters-summary">
                <p id="total_course_value" class="hl-filter" hidden>{{All_courses_count}}
                </p>
                <ul class="hl-filters">
